// Generated by data binding compiler. Do not edit!
package com.sunmnet.mediaroom.tabsp.databinding;

import android.databinding.Bindable;
import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import com.sunmnet.mediaroom.device.bean.AbstractDevice;
import com.sunmnet.mediaroom.tabsp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DoorInfoBinding extends ViewDataBinding {
  @NonNull
  public final TextView deviceDoorLockName;

  @NonNull
  public final TextView deviceDoorMegnetName;

  @NonNull
  public final ImageView deviceDoorlockState;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final TextView deviceState;

  @NonNull
  public final ImageView doorImage;

  @NonNull
  public final ImageView doorLockStatus;

  @NonNull
  public final ImageView doorMagneticStatus;

  @NonNull
  public final ProgressBar doorOperating;

  @Bindable
  protected AbstractDevice mDoorInfo;

  protected DoorInfoBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView deviceDoorLockName, TextView deviceDoorMegnetName, ImageView deviceDoorlockState,
      TextView deviceName, TextView deviceState, ImageView doorImage, ImageView doorLockStatus,
      ImageView doorMagneticStatus, ProgressBar doorOperating) {
    super(_bindingComponent, _root, _localFieldCount);
    this.deviceDoorLockName = deviceDoorLockName;
    this.deviceDoorMegnetName = deviceDoorMegnetName;
    this.deviceDoorlockState = deviceDoorlockState;
    this.deviceName = deviceName;
    this.deviceState = deviceState;
    this.doorImage = doorImage;
    this.doorLockStatus = doorLockStatus;
    this.doorMagneticStatus = doorMagneticStatus;
    this.doorOperating = doorOperating;
  }

  public abstract void setDoorInfo(@Nullable AbstractDevice doorInfo);

  @Nullable
  public AbstractDevice getDoorInfo() {
    return mDoorInfo;
  }

  @NonNull
  public static DoorInfoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tabsp_default_door_item_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DoorInfoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DoorInfoBinding>inflateInternal(inflater, R.layout.tabsp_default_door_item_layout, root, attachToRoot, component);
  }

  @NonNull
  public static DoorInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tabsp_default_door_item_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DoorInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DoorInfoBinding>inflateInternal(inflater, R.layout.tabsp_default_door_item_layout, null, false, component);
  }

  public static DoorInfoBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DoorInfoBinding bind(@NonNull View view, @Nullable Object component) {
    return (DoorInfoBinding)bind(component, view, R.layout.tabsp_default_door_item_layout);
  }
}
