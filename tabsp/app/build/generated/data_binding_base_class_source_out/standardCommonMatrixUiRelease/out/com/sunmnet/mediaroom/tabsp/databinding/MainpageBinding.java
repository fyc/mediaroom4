// Generated by data binding compiler. Do not edit!
package com.sunmnet.mediaroom.tabsp.databinding;

import android.databinding.Bindable;
import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.sunmnet.mediaroom.common.bean.course.CourseSchedule;
import com.sunmnet.mediaroom.device.bean.EnvirmentDevice;
import com.sunmnet.mediaroom.tabsp.R;
import com.sunmnet.mediaroom.tabsp.ui.adapter.HolderAdapter;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MainpageBinding extends ViewDataBinding {
  @NonNull
  public final TabspVersion1CourseLayoutBinding courseLayout;

  @NonNull
  public final TabspVersion1SceneLayoutBinding deviceSceneLayout;

  @NonNull
  public final TabspVersion1EnvirmentLayoutBinding envirmentLayout;

  @NonNull
  public final View tabspVolumnLayout;

  @Bindable
  protected CourseSchedule mCourse;

  @Bindable
  protected EnvirmentDevice mEnvirment;

  @Bindable
  protected HolderAdapter mConstrollSceneAdapter;

  protected MainpageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TabspVersion1CourseLayoutBinding courseLayout,
      TabspVersion1SceneLayoutBinding deviceSceneLayout,
      TabspVersion1EnvirmentLayoutBinding envirmentLayout, View tabspVolumnLayout) {
    super(_bindingComponent, _root, _localFieldCount);
    this.courseLayout = courseLayout;
    this.deviceSceneLayout = deviceSceneLayout;
    this.envirmentLayout = envirmentLayout;
    this.tabspVolumnLayout = tabspVolumnLayout;
  }

  public abstract void setCourse(@Nullable CourseSchedule course);

  @Nullable
  public CourseSchedule getCourse() {
    return mCourse;
  }

  public abstract void setEnvirment(@Nullable EnvirmentDevice envirment);

  @Nullable
  public EnvirmentDevice getEnvirment() {
    return mEnvirment;
  }

  public abstract void setConstrollSceneAdapter(@Nullable HolderAdapter constrollSceneAdapter);

  @Nullable
  public HolderAdapter getConstrollSceneAdapter() {
    return mConstrollSceneAdapter;
  }

  @NonNull
  public static MainpageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tabsp_version1_mainpage_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MainpageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MainpageBinding>inflateInternal(inflater, R.layout.tabsp_version1_mainpage_layout, root, attachToRoot, component);
  }

  @NonNull
  public static MainpageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.tabsp_version1_mainpage_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MainpageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MainpageBinding>inflateInternal(inflater, R.layout.tabsp_version1_mainpage_layout, null, false, component);
  }

  public static MainpageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MainpageBinding bind(@NonNull View view, @Nullable Object component) {
    return (MainpageBinding)bind(component, view, R.layout.tabsp_version1_mainpage_layout);
  }
}
